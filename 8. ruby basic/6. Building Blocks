Dates and Times
=================================================================================================================
Time stores times as a number of microseconds since the UNIX time
epoch: January 1, 1970 00:00:00 Greenwich Mean Time (GMT)/Coordinated Universal
Time (UTC). 时间这样设计有利于存储和运算和比较大小。
Time.now creates an instance of class Time that’s set to the current time, converted into the preceding string:

puts Time.now
puts Time.now - 10
puts Time.now + 86400  # => 86,400 seconds (exactly one day)
======================================================================================
year = 2020
month = 1
day = 16
hour = 12
min = 57
sec = 10
msec = 42
Time.local(year, month, day, hour, min, sec, msec)
Time.gm(year, month, day, hour, min, sec, msec)
Time.utc(year, month, day, hour, min, sec, msec)


========================================================================================
Time.gm(2020, 02).to_i  # => 1580515200
========================================================================================
epoch_time = Time.gm(2020, 2).to_i
t = Time.at(epoch_time)
puts t.year, t.month, t.day
========================================================================================
Table 3-6. Time Object Methods Used to Access Date/Time Attributes

                    Method What the Method Returns:

hour A number representing the hour in 24-hour format (e.g., 21 for 9 p.m.)
min The number of minutes past the hour
sec The number of seconds past the minute
usec The number of microseconds past the second (there are 1,000,000 microseconds per
second)
day The number of the day in the month
mday Synonym for the day method, considered to be “month” day
wday The number of the day in terms of the week (Sunday is 0, Saturday is 6)
yday The number of the day in terms of the year
month The number of the month of the date (e.g., 11 for November)
year The year associated with the date
zone Returns the name of the time zone associated with the time
utc? Returns true or false depending on if the time/date is in the UTC/GMT time zone or not
gmt? Synonym for the utc? method for those who prefer to use the term GMT
===================================================================================================
Ranges本身有.each方法

('A'..'Z').to_a.each { |letter| print letter }
('A'..'Z').each { |letter| print letter }

('A'..'Z').include?('R')  # => true

a = [2, 4, 6, 8, 10, 12]
p a[1..3]  # => [4, 6, 8]

a[1..3] = ["a", "b", "c"]
p a
# => [2, "a", "b", "c", 10, 12]
==================================================================================================
Symbols是抽象引用，通常有冒号前缀。Symbols don’t contain values or objects,
like variables do. 它们在代码中用作一致的名称。并不是没有值的文字常量。

current_situation = :good
puts "Everything is fine" if current_situation == :good
puts "PANIC!" if current_situation == :bad
# => "Everything is fine"

上面示例也可以写成current_situation = "good"，但是每一次用到"good"的时候会在内存里新建一个对象，而符号是单引用值，
只会初始化一次。

person1 = { name: "Fred", age: 20, gender: :male }
person2 = { name: "Laura", age: 23, gender: :female }
=========================================================================================================
Converting Objects to Other Classes
数字属于Integer或者Float类，字符串属于String类，符号symbols属于Symbol类

数字和字符串相互转化：
puts "12" + "10"     # => "1210"
puts "12".to_i + "10".to_i  # => 22
puts 12.to_s + 10.to_s  # => "1210"
puts "12".to_f  # => 12.0
puts "amose".to_sym  # =>   :amose
puts :amose.to_s     # => "amose"





 






















































